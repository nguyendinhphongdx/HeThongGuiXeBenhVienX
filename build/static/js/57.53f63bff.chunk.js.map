{"version":3,"sources":["views/theme/typography/Typography.js","reusable/DocsLink.js","reusable/index.js"],"names":["Typography","href","className","DocsLink","props","name","text","rest","rel","target","React","memo"],"mappings":"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","file":"static/js/57.53f63bff.chunk.js","sourcesContent":["import React from 'react'\r\nimport {\r\n  CCard,\r\n  CCardHeader,\r\n  CCardBody\r\n} from '@coreui/react'\r\nimport { DocsLink } from '../../../reusable'\r\n\r\nconst Typography = () => {\r\n  return (\r\n    <>\r\n      <CCard>\r\n        <CCardHeader>\r\n          Headings\r\n          <DocsLink href=\"https://coreui.io/docs/content/typography/\"/>\r\n        </CCardHeader>\r\n        <CCardBody>\r\n          <p>Documentation and examples for Bootstrap typography, including global settings, headings, body text, lists, and more.</p>\r\n          <table className=\"table\">\r\n            <thead>\r\n            <tr>\r\n              <th>Heading</th>\r\n              <th>Example</th>\r\n            </tr>\r\n            </thead>\r\n            <tbody>\r\n            <tr>\r\n              <td>\r\n                <p><code className=\"highlighter-rouge\">&lt;h1&gt;&lt;/h1&gt;</code></p>\r\n              </td>\r\n              <td><span className=\"h1\">h1. Bootstrap heading</span></td>\r\n            </tr>\r\n            <tr>\r\n              <td>\r\n                <p><code className=\"highlighter-rouge\">&lt;h2&gt;&lt;/h2&gt;</code></p>\r\n              </td>\r\n              <td><span className=\"h2\">h2. Bootstrap heading</span></td>\r\n            </tr>\r\n            <tr>\r\n              <td>\r\n                <p><code className=\"highlighter-rouge\">&lt;h3&gt;&lt;/h3&gt;</code></p>\r\n              </td>\r\n              <td><span className=\"h3\">h3. Bootstrap heading</span></td>\r\n            </tr>\r\n            <tr>\r\n              <td>\r\n                <p><code className=\"highlighter-rouge\">&lt;h4&gt;&lt;/h4&gt;</code></p>\r\n              </td>\r\n              <td><span className=\"h4\">h4. Bootstrap heading</span></td>\r\n            </tr>\r\n            <tr>\r\n              <td>\r\n                <p><code className=\"highlighter-rouge\">&lt;h5&gt;&lt;/h5&gt;</code></p>\r\n              </td>\r\n              <td><span className=\"h5\">h5. Bootstrap heading</span></td>\r\n            </tr>\r\n            <tr>\r\n              <td>\r\n                <p><code className=\"highlighter-rouge\">&lt;h6&gt;&lt;/h6&gt;</code></p>\r\n              </td>\r\n              <td><span className=\"h6\">h6. Bootstrap heading</span></td>\r\n            </tr>\r\n            </tbody>\r\n          </table>\r\n        </CCardBody>\r\n      </CCard>\r\n      <CCard>\r\n        <CCardHeader>\r\n          Headings\r\n        </CCardHeader>\r\n        <CCardBody>\r\n          <p><code className=\"highlighter-rouge\">.h1</code> through \r\n          <code className=\"highlighter-rouge\">.h6</code> \r\n          classes are also available, for when you\r\n          want to match the font styling of a heading but cannot use the \r\n          associated HTML element.</p>\r\n          <div className=\"bd-example\">\r\n            <p className=\"h1\">h1. Bootstrap heading</p>\r\n            <p className=\"h2\">h2. Bootstrap heading</p>\r\n            <p className=\"h3\">h3. Bootstrap heading</p>\r\n            <p className=\"h4\">h4. Bootstrap heading</p>\r\n            <p className=\"h5\">h5. Bootstrap heading</p>\r\n            <p className=\"h6\">h6. Bootstrap heading</p>\r\n          </div>\r\n        </CCardBody>\r\n      </CCard>\r\n      <CCard>\r\n        <div className=\"card-header\">\r\n          Display headings\r\n        </div>\r\n        <div className=\"card-body\">\r\n          <p>Traditional heading elements are designed to work best in the meat of your page content. When you need a heading to stand out, consider using\r\n            a <strong>display heading</strong>—a larger, slightly more opinionated heading style.</p>\r\n          <div className=\"bd-example bd-example-type\">\r\n            <table className=\"table\">\r\n              <tbody>\r\n              <tr>\r\n                <td><span className=\"display-1\">Display 1</span></td>\r\n              </tr>\r\n              <tr>\r\n                <td><span className=\"display-2\">Display 2</span></td>\r\n              </tr>\r\n              <tr>\r\n                <td><span className=\"display-3\">Display 3</span></td>\r\n              </tr>\r\n              <tr>\r\n                <td><span className=\"display-4\">Display 4</span></td>\r\n              </tr>\r\n              </tbody>\r\n            </table>\r\n          </div>\r\n        </div>\r\n      </CCard>\r\n      <CCard>\r\n        <CCardHeader>\r\n          Inline text elements\r\n        </CCardHeader>\r\n        <CCardBody>\r\n          <p>Traditional heading elements are designed to work best in the meat of your page content. When you need a heading to stand out, consider using\r\n            a <strong>display heading</strong>—a larger, slightly more opinionated heading style.</p>\r\n          <div className=\"bd-example\">\r\n            <p>You can use the mark tag to <mark>highlight</mark> text.</p>\r\n            <p>\r\n              <del>This line of text is meant to be treated as deleted text.</del>\r\n            </p>\r\n            <p><s>This line of text is meant to be treated as no longer accurate.</s></p>\r\n            <p>\r\n              <ins>This line of text is meant to be treated as an addition to the document.</ins>\r\n            </p>\r\n            <p><u>This line of text will render as underlined</u></p>\r\n            <p>\r\n              <small>This line of text is meant to be treated as fine print.</small>\r\n            </p>\r\n            <p><strong>This line rendered as bold text.</strong></p>\r\n            <p><em>This line rendered as italicized text.</em></p>\r\n          </div>\r\n        </CCardBody>\r\n      </CCard>\r\n      <CCard>\r\n        <CCardHeader>\r\n          Description list alignment\r\n        </CCardHeader>\r\n        <CCardBody>\r\n          <p>Align terms and descriptions horizontally by using our grid system’s predefined classes (or semantic mixins). For longer terms, you can\r\n            optionally add a <code className=\"highlighter-rouge\">.text-truncate</code> class to truncate the text with an ellipsis.</p>\r\n          <div className=\"bd-example\">\r\n            <dl className=\"row\">\r\n              <dt className=\"col-sm-3\">Description lists</dt>\r\n              <dd className=\"col-sm-9\">A description list is perfect for defining terms.</dd>\r\n\r\n              <dt className=\"col-sm-3\">Euismod</dt>\r\n              <dd className=\"col-sm-9\">\r\n                <p>Vestibulum id ligula porta felis euismod semper eget lacinia odio sem nec elit.</p>\r\n                <p>Donec id elit non mi porta gravida at eget metus.</p>\r\n              </dd>\r\n\r\n              <dt className=\"col-sm-3\">Malesuada porta</dt>\r\n              <dd className=\"col-sm-9\">Etiam porta sem malesuada magna mollis euismod.</dd>\r\n\r\n              <dt className=\"col-sm-3 text-truncate\">Truncated term is truncated</dt>\r\n              <dd className=\"col-sm-9\">Fusce dapibus, tellus ac cursus commodo, tortor mauris condimentum nibh, ut fermentum massa justo sit amet risus.</dd>\r\n\r\n              <dt className=\"col-sm-3\">Nesting</dt>\r\n              <dd className=\"col-sm-9\">\r\n                <dl className=\"row\">\r\n                  <dt className=\"col-sm-4\">Nested definition list</dt>\r\n                  <dd className=\"col-sm-8\">Aenean posuere, tortor sed cursus feugiat, nunc augue blandit nunc.</dd>\r\n                </dl>\r\n              </dd>\r\n            </dl>\r\n          </div>\r\n        </CCardBody>\r\n      </CCard>\r\n    </>\r\n  )\r\n}\r\n\r\nexport default Typography\r\n","import React from 'react'\r\nimport { CLink } from '@coreui/react'\r\n\r\nconst DocsLink = props => {\r\n  const {\r\n    name,\r\n    text,\r\n    ...rest\r\n  } = props\r\n\r\n  const href = name ? `https://coreui.io/react/docs/components/${name}` : props.href\r\n\r\n  return (\r\n    <div className=\"card-header-actions\">\r\n      <CLink \r\n        {...rest}\r\n        href={href}\r\n        rel=\"noreferrer noopener\" \r\n        target=\"_blank\" \r\n        className=\"card-header-action\"  \r\n      >\r\n        <small className=\"text-muted\">{ text || 'docs' }</small>\r\n      </CLink>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default React.memo(DocsLink)","import DocsLink from './DocsLink'\r\n\r\nexport {\r\n  DocsLink\r\n}"],"sourceRoot":""}