{"version":3,"sources":["views/pages/register/Register.js","helpers/converter.js","axios/requestAPI.js","views/notifications/notif/notifStore.js","axios/configAPI.js","helpers/validateForm.js","redux/actions/userActions.js","redux/services/UserServices.js"],"names":["Register","useState","loading","setLoading","useForm","register","handleSubmit","errors","formState","useContext","AuthContext","history","login","token","useHistory","className","md","lg","xl","to","style","fontSize","textAlign","marginTop","marginLeft","onSubmit","value","valid","ValidateFormRegistry","alert","message","console","log","UserService","SignUpService","then","result","replace","success","finally","name","type","placeholder","autoComplete","required","username","mail","password","repeat","selected","defaultValue","role_id","ip","color","disabled","block","EncodeAuthorization","object","stringBtoa","window","btoa","DecodeAuthorization","string","auth","split","atob","convertUsers","users","map","item","index","maNhanVien","manv","tenNhanVien","tennv","tuoi","soDienThoai","sdt","convertLocation","arr","maKhuVuc","makhuvuc","tenKhuVuc","tenkhuvuc","soLuongToiDa","soluongtoida","soLuongHienTai","soluonghientai","convertCard","trangthai","tinhtrang","convertTicket","kt","thoigianketthuc","thoigianbatdau","Date","toLocaleDateString","toLocaleTimeString","dstart","tstart","helpers","getTimeInputTime","dend","tend","convertPrice","maGia","magia","loaiGui","convertChartAnalysType","data","key","loaixe","soluong","addFieldColorRandom","source","axios","CancelToken","sendRequest","endpoint","method","body","a","localStorage","getItem","config","url","SERVER_NODE","cancelToken","headers","response","request","openSuccessNotif","title","duration","store","addNotification","id","insert","container","animationIn","animationOut","dismiss","onScreen","openTypeNotif","clearNotif","removeNotification","ValidateFormAddService","dataHeaders","header","dataBody","dataParams","params","dataAuth","Authorization","typebody","Array","isArray","forEach","JSON","parse","ServiceConvertor","info","method_direct","Id","error","ValidateFormLogin","taikhoan","matkhau","sodienthoai","includes","mavaitro","ValidateFormAddTicket","mathe","bienso","mauxe","stringTime","dateStart","setHours","setMinutes","toISOString","ValidateFormReturnTicket","getTime","QueryAll_User","UserConstants","QUERY_ALL","payload","LoginService","Error","catch","StoreNotif","QueryAll","dispatch","action","converter","DeleteUser"],"mappings":"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","file":"static/js/25.4bacb114.chunk.js","sourcesContent":["import { LeftOutlined } from \"@ant-design/icons\";\r\nimport CIcon from \"@coreui/icons-react\";\r\nimport {\r\n  CButton,\r\n  CCard,\r\n  CCardBody,\r\n  CCardFooter,\r\n  CCol,\r\n  CContainer,\r\n  CForm,\r\n  CInput,\r\n  CInputGroup,\r\n  CInputGroupPrepend,\r\n  CInputGroupText,\r\n  CRow,\r\n  CSelect\r\n} from \"@coreui/react\";\r\nimport { message } from \"antd\";\r\nimport React, { useContext, useState } from \"react\";\r\nimport { useForm } from \"react-hook-form\";\r\nimport { Link, useHistory } from \"react-router-dom\";\r\nimport { AuthContext } from \"../../../contexts/auth\";\r\nimport { ValidateFormRegistry } from \"../../../helpers/validateForm\";\r\nimport UserService from \"../../../redux/services/UserServices\";\r\n\r\nconst Register = () => {\r\n  const [loading, setLoading] = useState(false);\r\n  const {\r\n    register,\r\n    handleSubmit,\r\n    formState: { errors },\r\n  } = useForm();\r\n  const { login, token } = useContext(AuthContext);\r\n  let history = useHistory();\r\n  const onSubmit = value => {\r\n    setLoading(!loading);\r\n    const valid = ValidateFormRegistry(value);\r\n    if (valid !== true) {\r\n      alert(valid.message);\r\n      setLoading(false);\r\n    } else {\r\n      console.log(value);\r\n      UserService.SignUpService(value)\r\n        .then((result) => {\r\n          if (result) {\r\n            const token = result.token;\r\n            history.replace('/login');\r\n            message.success('Registry successfully');\r\n          }\r\n        })\r\n        .finally(() => {\r\n          setLoading(false);\r\n        })\r\n    }\r\n  };\r\n  return (\r\n    <div className=\"c-app c-default-layout flex-row align-items-center\">\r\n      <CContainer>\r\n        <CRow className=\"justify-content-center\">\r\n          <CCol md=\"9\" lg=\"7\" xl=\"6\">\r\n            <CCard className=\"mx-4\">\r\n              <Link to=\"/login\">\r\n                <LeftOutlined\r\n                  style={{\r\n                    fontSize: \"30px\",\r\n                    textAlign: \"left\",\r\n                    marginTop: \"10px\",\r\n                    marginLeft: \"10px\",\r\n                  }}\r\n                />\r\n              </Link>\r\n              <CCardBody className=\"p-4\">\r\n                <CForm onSubmit={handleSubmit(onSubmit)}>\r\n                  <h1>Register</h1>\r\n                  <p className=\"text-muted\">Create your account</p>\r\n                  <CInputGroup className=\"mb-3\">\r\n                    <CInputGroupPrepend>\r\n                      <CInputGroupText>\r\n                        <CIcon name=\"cil-user\" />\r\n                      </CInputGroupText>\r\n                    </CInputGroupPrepend>\r\n                    <CInput\r\n                      type=\"text\"\r\n                      placeholder=\"Username\"\r\n                      autoComplete=\"username\"\r\n                      {...register(\"username\", { required: true })}\r\n                    />\r\n                  </CInputGroup>\r\n                  {errors.username && (\r\n                    <span className=\"error\">This field is required</span>\r\n                  )}\r\n                  <CInputGroup className=\"mb-3\">\r\n                    <CInputGroupPrepend>\r\n                      <CInputGroupText>@</CInputGroupText>\r\n                    </CInputGroupPrepend>\r\n                    <CInput\r\n                      type=\"text\"\r\n                      placeholder=\"Email\"\r\n                      autoComplete=\"email\"\r\n                      {...register(\"mail\", { required: true })}\r\n                    />\r\n                  </CInputGroup>\r\n                  {errors.mail && (\r\n                    <span className=\"error\">This field is required</span>\r\n                  )}\r\n                  <CInputGroup className=\"mb-3\">\r\n                    <CInputGroupPrepend>\r\n                      <CInputGroupText>\r\n                        <CIcon name=\"cil-lock-locked\" />\r\n                      </CInputGroupText>\r\n                    </CInputGroupPrepend>\r\n                    <CInput\r\n                      type=\"password\"\r\n                      placeholder=\"Password\"\r\n                      autoComplete=\"new-password\"\r\n                      {...register(\"password\", { required: true })}\r\n                    />\r\n                  </CInputGroup>\r\n                  {errors.password && (\r\n                    <span className=\"error\">This field is required</span>\r\n                  )}\r\n                  <CInputGroup className=\"mb-4\">\r\n                    <CInputGroupPrepend>\r\n                      <CInputGroupText>\r\n                        <CIcon name=\"cil-lock-locked\" />\r\n                      </CInputGroupText>\r\n                    </CInputGroupPrepend>\r\n                    <CInput\r\n                      type=\"password\"\r\n                      placeholder=\"Repeat password\"\r\n                      autoComplete=\"new-password\"\r\n                      {...register(\"repeat\", { required: true })}\r\n                    />\r\n                  </CInputGroup>\r\n                  {errors.repeat && (\r\n                    <span className=\"error\">This field is required</span>\r\n                  )}\r\n                  <CRow>\r\n                    <CCol md=\"9\" lg=\"7\" xl=\"6\">\r\n                      <CInputGroup className=\"mb-4\">\r\n                        <CInputGroupPrepend>\r\n                          <CInputGroupText>\r\n                            <CIcon name=\"cil-settings\" />\r\n                          </CInputGroupText>\r\n                        </CInputGroupPrepend>\r\n                        <CSelect selected={3} defaultValue={'3'} {...register(\"role_id\", { required: true })}>\r\n                        <option>Role</option>\r\n                         <option value={3}>Super User</option>\r\n                          <option value={1}>Admin</option>\r\n                          <option value={2}>User</option>\r\n                        </CSelect>\r\n                      </CInputGroup>\r\n                      {errors.role_id && (\r\n                        <span className=\"error\">This field is required</span>\r\n                      )}\r\n                    </CCol>\r\n                    <CCol md=\"9\" lg=\"7\" xl=\"6\">\r\n                      <CInputGroup className=\"mb-4\">\r\n                        <CInputGroupPrepend>\r\n                          <CInputGroupText>\r\n                            <CIcon name=\"cil-user\" />\r\n                          </CInputGroupText>\r\n                        </CInputGroupPrepend>\r\n                        <CInput   placeholder=\"Ip Address\" {...register(\"ip\", { required: true})}\r\n                    />\r\n                      </CInputGroup>\r\n                      {errors.ip && (\r\n                        <span className=\"error\">This field is required</span>\r\n                      )}\r\n                    </CCol>\r\n                  </CRow>\r\n\r\n                  <CButton\r\n                    color=\"primary\"\r\n                    type=\"submit\"\r\n                    disabled={loading}\r\n                    className=\"px-12\"\r\n                    block\r\n                  >\r\n                    Create Account\r\n                  </CButton>\r\n                </CForm>\r\n              </CCardBody>\r\n              <CCardFooter className=\"p-4\">\r\n                {/* <CRow>\r\n                  <CCol xs=\"12\" sm=\"6\">\r\n                    <CButton className=\"btn-facebook mb-1\" block><span>facebook</span></CButton>\r\n                  </CCol>\r\n                  <CCol xs=\"12\" sm=\"6\">\r\n                    <CButton className=\"btn-twitter mb-1\" block><span>twitter</span></CButton>\r\n                  </CCol>\r\n                </CRow> */}\r\n              </CCardFooter>\r\n            </CCard>\r\n          </CCol>\r\n        </CRow>\r\n      </CContainer>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Register;\r\n","import { SERVER_NODE } from '../axios/configAPI';\r\nimport helpers from '../helpers/helpers';\r\nimport Helper from '../helpers/helpers';\r\nclass ServiceConverter{\r\n    EncodeAuthorization = (object) => {\r\n        if (object.type === 'Bear') {\r\n            return `Bear ${object.token}`\r\n        }\r\n        if (object.type === 'Basic') {\r\n            const stringBtoa = `${object.username || ''}:${object.password || ''}`\r\n            return `Basic ${window.btoa(stringBtoa)}`\r\n        } else {\r\n            return null || {}\r\n        }\r\n    }\r\n    DecodeAuthorization = (string) => {\r\n        if (typeof string === 'string') {\r\n            const auth = string.split(\" \");\r\n            console.log('decode', auth);\r\n            if(auth[0] === 'Bear'){\r\n                return {\r\n                    type:auth[0], \r\n                    token:auth[1]\r\n                };\r\n            }else{\r\n                const atob = window.atob(auth[1]).split(\":\");\r\n                return {\r\n                    type:auth[0], \r\n                    username: atob[0],\r\n                    password:  atob[1]\r\n                };\r\n            }\r\n        }else{\r\n            return {}\r\n        }\r\n    }\r\n  \r\n    convertUsers=(users)=>{\r\n        return users.map((item,index)=>{\r\n            return {\r\n                ...item,\r\n                index:index,\r\n                maNhanVien:`Nhân Viên ${item.manv}`,\r\n                tenNhanVien:`${item.tennv}`,\r\n                tuoi:item.tuoi,\r\n                soDienThoai:item.sdt || '0352337342'\r\n            }\r\n        })\r\n    }\r\n    convertLocation = (arr) =>{\r\n        return arr.map((item,index)=>{\r\n            return {\r\n                  index: index,\r\n                  maKhuVuc: item.makhuvuc,\r\n                  tenKhuVuc: `Khu Vực  ${item.tenkhuvuc}`,\r\n                  soLuongToiDa: item.soluongtoida,\r\n                  soLuongHienTai: item.soluonghientai\r\n            }\r\n        })\r\n    }\r\n    convertCard = (arr) =>{\r\n        return arr.map((item,index)=>{\r\n            return {\r\n                index: index,\r\n                ...item,\r\n                trangthai: item.tinhtrang?'đang được sử dụng':'chưa được sử dụng'\r\n            }\r\n        })\r\n    }\r\n    convertTicket = (arr) =>{\r\n        return arr.map((item,index)=>{\r\n            const kt = item.thoigianketthuc === item.thoigianbatdau?'Chưa trả lại':new Date(item.thoigianketthuc).toLocaleDateString() +' - '+new Date(item.thoigianketthuc).toLocaleTimeString()\r\n            return {\r\n                index: index,\r\n                ...item,\r\n                dstart:item.thoigianbatdau,\r\n                tstart:helpers.getTimeInputTime(item.thoigianbatdau),\r\n                dend:item.thoigianketthuc,\r\n                tend:helpers.getTimeInputTime(item.thoigianketthuc),\r\n                thoigianbatdau:new Date(item.thoigianbatdau).toLocaleDateString() +' - '+new Date(item.thoigianbatdau).toLocaleTimeString(),\r\n                thoigianketthuc:kt,\r\n            }\r\n        })\r\n    }\r\n    convertPrice = (arr) =>{\r\n        return arr.map((item,index)=>{\r\n            return {\r\n                index: index,\r\n                ...item,\r\n                maGia:`Mã giá ${item.magia}`,\r\n                loaiGui:`${item.loaiGui} Ngày`\r\n            }\r\n        })\r\n    }\r\n    convertChartAnalysType = (arr) =>{\r\n        const data = arr.map((item,index)=>{\r\n            // loaixe: 'winner', soluong: 17, index: 3\r\n            return {\r\n                ...item,\r\n                key:item.loaixe,\r\n                value:item.soluong\r\n            }\r\n        })\r\n        return helpers.addFieldColorRandom(data)\r\n    }\r\n}\r\nexport default new ServiceConverter();\r\n","import axios from 'axios';\r\nimport { SERVER_NODE } from './configAPI';\r\nconst cancelToken = axios.CancelToken;\r\nconst source = cancelToken.source();\r\nexport default async function sendRequest(endpoint, method, body) {\r\n    const token = localStorage.getItem('token') || '';\r\n    // const date = localStorage.getItem('date') || '2021-07-15';\r\n    // const dateParams  =  date?{date: date}:{}\r\n    const config = {\r\n        method: method,\r\n        url: `${SERVER_NODE}${endpoint}`,\r\n        data: body,\r\n        cancelToken:source.token,\r\n        headers:{\r\n            'authorization':`Bear ${token}`\r\n        },\r\n        // params:dateParams\r\n    }\r\n    console.log(config);\r\n    const request = await axios(config).then((response) => {\r\n        if (response && response.data) {\r\n            return response.data;\r\n        }\r\n    });\r\n    return request;\r\n}\r\n","import { store } from \"react-notifications-component\";\r\n\r\nclass StoreNoti {\r\n  openSuccessNotif = (title, message, duration, type) => {\r\n    store.addNotification({\r\n      id: message,\r\n      title: title || \"Wonderful!\",\r\n      message: message || \"teodosii@react-notifications-component\",\r\n      type: type || \"success\",\r\n      insert: \"top\",\r\n      container: \"top-right\",\r\n      animationIn: [\"animate__animated\", \"animate__fadeIn\"],\r\n      animationOut: [\"animate__animated\", \"animate__fadeOut\"],\r\n      dismiss: {\r\n        duration: duration || 5000,\r\n        onScreen: true,\r\n      },\r\n    });\r\n  };\r\n  openTypeNotif = (title, message, duration, type) => {\r\n    store.addNotification({\r\n      id: message,\r\n      title: title || \"Wonderful!\",\r\n      message: message || \"teodosii@react-notifications-component\",\r\n      type: type || \"success\",\r\n      insert: \"top\",\r\n      container: \"top-right\",\r\n      animationIn: [\"animate__animated\", \"animate__fadeIn\"],\r\n      animationOut: [\"animate__animated\", \"animate__fadeOut\"],\r\n      dismiss: {\r\n        duration: duration || 5000,\r\n        onScreen: true,\r\n      },\r\n    });\r\n  };\r\n  clearNotif = id => {\r\n    store.removeNotification(id);\r\n  };\r\n}\r\nexport default new StoreNoti();\r\n","export const SERVER_NODE = 'https://localhost:5001/api'\r\n","import { message } from 'antd';\r\nimport ServiceConvertor from './converter';\r\nexport const ValidateFormAddService = (data) => {\r\n    try {\r\n        console.log('inconvert', data);\r\n        const dataHeaders = data.header || [];\r\n        const dataBody = data.body || [];\r\n        const dataParams = data.params || [];\r\n        var dataAuth = data.Authorization || {};\r\n        var typebody = data.typebody || 'json';\r\n        var headers = {};\r\n        if (Array.isArray(dataHeaders)) {\r\n            dataHeaders.forEach((item, index) => {\r\n                headers[`${item.key}`] = item.value;\r\n            })\r\n        }\r\n        var body = {};\r\n        if (Array.isArray(dataBody)) {\r\n            dataBody.forEach((item, index) => {\r\n                body[`${item.key}`] = item.value;\r\n            })\r\n        }else{\r\n            body= JSON.parse(dataBody);\r\n        }\r\n        var params = {};\r\n        if (Array.isArray(dataParams)) {\r\n            dataParams.forEach((item, index) => {\r\n                params[`${item.key}`] = item.value;\r\n            })\r\n        }\r\n      \r\n        if (dataAuth.type === 'none') {\r\n            delete dataAuth.type\r\n        }else{\r\n            dataAuth = ServiceConvertor.EncodeAuthorization(dataAuth);\r\n        }\r\n        const info = {\r\n            method: data.method_direct,\r\n            url: data.url,\r\n            header: headers,\r\n            typebody,\r\n            body: body,\r\n            params: params,\r\n            Authorization: dataAuth,\r\n           \r\n    \r\n        }\r\n        var result = {\r\n            Id: data.id || -1,\r\n            endpoint: data.endpoint,\r\n        }\r\n        result.config = {};\r\n        result.config[`${data.method}`] = info;\r\n        return result;\r\n    } catch (error) {\r\n        message.error(error.message);\r\n    }\r\n  \r\n}\r\n\r\nexport const ValidateFormLogin = (data) => {\r\n    if (!data.taikhoan) {\r\n        return {\r\n            message: 'Username not invalid'\r\n        }\r\n    }\r\n    if (!data.matkhau) {\r\n        return {\r\n            message: 'Password not invalid'\r\n        }\r\n    }\r\n    return true;\r\n}\r\nexport const ValidateFormRegistry = (data) => {\r\n    if (!data.sodienthoai) {\r\n        return 'Số điện thoại không được bỏ trống!'\r\n        \r\n    }\r\n    if (!data.tenNhanVien) {\r\n        return 'Tên nhân viên không được bỏ trống!'\r\n\r\n    }\r\n    if (!data.tuoi || +data.tuoi < 16) {\r\n        return  'Tuổi không được nhỏ hơn 16'\r\n    \r\n    }\r\n    if (!['1','2','3',1, 2, 3].includes(data.mavaitro) ) {\r\n        return  'Chọn chức vụ'\r\n        \r\n    }\r\n    return {\r\n        manv:(data.manv?+data.manv:-1),\r\n        sodienthoai:data.sodienthoai,\r\n        tennv: data.tenNhanVien,\r\n        tuoi:+data.tuoi,\r\n        mavaitro:+data.mavaitro\r\n    };\r\n}\r\nexport const ValidateFormAddTicket = (data) => {\r\n    console.log(data);\r\n    if(!data.mathe){\r\n        return \"Chọn thẻ\"\r\n    }\r\n    if(!data.bienso){\r\n        return \"Nhập vào biển số!\"\r\n    }\r\n    if(!data.dstart || !data.tstart){\r\n        return \"Nhập vào ngày bắt đầu!\"\r\n    }\r\n    if(!data.magia){\r\n        return \"Chọn loại gửi!\"\r\n    }\r\n    if(!data.loaixe){\r\n        return \"Nhập loại xe!\"\r\n    }\r\n    if(!data.mauxe){\r\n        return \"Nhập màu xe!\"\r\n    }\r\n    if(!data.manv){\r\n        return \"Nhân viên lập chưa được lựa chọn!\"\r\n    }\r\n    const stringTime = data.tstart.split(\":\");\r\n    const dateStart = new Date(data.dstart);\r\n    dateStart.setHours(stringTime[0]);\r\n    dateStart.setMinutes(stringTime[1]);\r\n    delete data.thoigianketthuc\r\n    return {\r\n        ...data,\r\n        mathe:+data.mathe,\r\n        manv:+data.manv,\r\n        magia:+data.magia,\r\n        thoigianbatdau:dateStart.toISOString()\r\n    }\r\n}\r\nexport const ValidateFormReturnTicket = (data) => {\r\n    if(!data.mathe){\r\n        return \"Mã thẻ không chính xác!\"\r\n    }\r\n    if(!data.bienso){\r\n        return \"Biển số không chính xác!\"\r\n\r\n    }\r\n    if(!data.loaixe){\r\n        return \"Loại xe không chính xác!\"\r\n    }\r\n    if(!data.mauxe){\r\n        return \"Màu xe không chính xác!\"\r\n    }\r\n    return {\r\n        bienso:data.bienso,\r\n        mathe:+data.mathe,\r\n        loaixe:data.loaixe,\r\n        mauxe:data.mauxe,\r\n        thoigianketthuc:new Date(new Date().getTime()+25200000).toISOString()\r\n    }\r\n}","\r\nimport { UserConstants } from \"../config/constant\";\r\n\r\nexport const Login_Action = user => {\r\n  return {\r\n    type: UserConstants.ACTION_LOGIN,\r\n    payload: user,\r\n  };\r\n};\r\nexport const SignUp_Action = data => {\r\n  return {\r\n    type: UserConstants.ACTION_SIGNUP,\r\n    payload: data,\r\n  };\r\n};\r\nexport const QueryAll_User = data => {\r\n  return {\r\n    type: UserConstants.QUERY_ALL,\r\n    payload: data,\r\n  };\r\n};\r\n\r\n","import { message } from \"antd\";\r\nimport sendRequest from \"../../axios/requestAPI\";\r\nimport converter from \"../../helpers/converter\";\r\nimport StoreNotif from \"../../views/notifications/notif/notifStore\";\r\nimport { QueryAll_Account, QueryAll_User } from \"../actions/userActions\";\r\n\r\nclass UserService {\r\n  LoginService = async body => {\r\n    const result = await sendRequest(\"/user/login\", \"post\", body)\r\n      .then(result => {\r\n        if (result && result.data) {\r\n          console.log(\"result.data\",result.data);\r\n          return result.data;\r\n          \r\n        } else {\r\n          throw new Error(result.message);\r\n        }\r\n      })\r\n      .catch(error => {\r\n        StoreNotif.openSuccessNotif(\"Create User\", error.message, 2000);\r\n      });\r\n    return result;\r\n  };\r\n  SignUpService = async body => {\r\n    const result = await sendRequest(\"/user/registry\", \"post\", body)\r\n      .then(result => {\r\n       \r\n        if (result && result.data) {\r\n          return result.data;\r\n        } else {\r\n          throw new Error(result.message);\r\n        }\r\n      })\r\n      .catch(error => {\r\n        message.error(error.message);\r\n        console.log(error.message);\r\n      });\r\n    return result;\r\n  };\r\n  QueryAll = async (dispatch) => {\r\n    const result = await sendRequest(\"/user/queryAll\", \"get\")\r\n      .then(result => {\r\n        if (result && result.data) {\r\n          const action = QueryAll_User(converter.convertUsers(result.data));\r\n          dispatch(action)\r\n          return result.data;\r\n        } else {\r\n          throw new Error(result.message);\r\n        }\r\n      })\r\n      .catch(error => {\r\n        StoreNotif.openSuccessNotif(\"Query User\", error.message, 2000);\r\n      });\r\n    return result;\r\n  };\r\n  DeleteUser = async (Id,dispatch) => {\r\n    const result = await sendRequest(`/user/${Id}`, \"delete\")\r\n      .then(result => {\r\n        if (result && result.data) {\r\n          const action = QueryAll_User(converter.convertUsers(result.data));\r\n          dispatch(action)\r\n          return result.data;\r\n        } else {\r\n          throw new Error(result.message);\r\n        }\r\n      })\r\n      .catch(error => {\r\n        message.error(error.message);\r\n      });\r\n    return result;\r\n  };\r\n}\r\nexport default new UserService();\r\n"],"sourceRoot":""}