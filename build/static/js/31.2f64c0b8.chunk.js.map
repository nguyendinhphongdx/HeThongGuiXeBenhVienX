{"version":3,"sources":["redux/actions/settingsActions.js","redux/services/settingsServices.js","views/settings/components/TabNotify/index.js","views/settings/index.js"],"names":["config","type","SettingsConstants","CONFIG","payload","QueryConfig","dispatch","a","sendRequest","then","response","status","action","SettingsActions","GetConfig","Converter","convertConfigFile","data","Error","message","catch","error","console","log","result","UpdateConfig","StoreNotif","openSuccessNotif","TabNotify","notify","bmail","firebase","news","els","logs","form","useDispatch","useState","activeUser","checkUser","setCheckUser","activeSPUser","checkSPUser","setCheckSPUser","active","checkSendMail","setSendMail","image","setImage","checkLogs","setCheckLogs","toogleCheck","preState","setSate","useEffect","setFieldsValue","formItemLayout","labelCol","xs","span","SettingsMail","Item","label","defaultChecked","onChange","name","value","e","target","handleOnChangeImage","style","paddingTop","display","justifyContent","src","width","height","rules","required","placeholder","Password","List","validator","_","names","length","Promise","reject","fields","add","remove","errors","map","field","index","key","validateTrigger","whitespace","noStyle","MinusCircleOutlined","className","onClick","icon","PlusOutlined","ErrorList","SettingsNotify","SettingsFireBase","SettingsNews","SettingsELS","SettingsLogs","disabled","flexWrap","minWidth","onFinish","values","body","timeSync","parseInt","mailPort","subIndex","deleteAffterDay","dayAgoDeleteNotify","limitRecord","offset","HelperClass","SetLoading","setTimeout","settingsServices","finally","handleFinish","padding","Settings","useForm","fileConfig","useSelector","state","fontSize","color","fontWeight","placement","title","onConfirm","reset","okText","cancelText","marginRight","htmlType","submit"],"mappings":"mTAUe,M,yFAPX,SAAUA,GACN,MAAO,CACHC,KAAMC,IAAkBC,OACxBC,QAASJ,O,wBCuCN,M,sCAvCbK,Y,uCAAc,WAAMC,GAAN,eAAAC,EAAA,sEACSC,YAAY,mBAAoB,OAClDC,MAAK,SAAAC,GACJ,GAAuB,KAAnBA,EAASC,OAAe,CAC1B,IAAMC,EAASC,EAAgBC,UAC7BC,IAAUC,kBAAkBN,EAASO,MAAQ,KAG/C,OADAX,EAASM,GACFF,EAASO,KAEhB,MAAM,IAAIC,MAAMR,EAASS,YAG5BC,OAAM,SAAAC,GACLC,QAAQC,IAAIF,MAdJ,cACNG,EADM,yBAiBLA,GAjBK,2C,2DAmBdC,a,uCAAc,WAAOzB,EAAOM,GAAd,eAAAC,EAAA,sEACSC,YAAY,mBAAoB,MAAMR,GAC1DS,MAAK,SAAAC,GACJ,GAAuB,KAAnBA,EAASC,OAAe,CAC1B,IAAMC,EAASC,EAAgBC,UAC7BC,IAAUC,kBAAkBN,EAASO,MAAQ,KAG/C,OADAX,EAASM,GACFF,EAASO,KAEhB,MAAM,IAAIC,MAAMR,EAASS,YAG5BC,OAAM,SAAAC,GACLC,QAAQC,IAAIF,GACZK,IAAWC,iBAAiB,kBAAaN,EAAMF,QAAS,IAAM,YAfpD,cACNK,EADM,yBAiBPA,GAjBO,2C,iKCwlBDI,EAzmBG,SAAC,GAAwD,IAAtDC,EAAqD,EAArDA,OAAQC,EAA6C,EAA7CA,MAAOC,EAAsC,EAAtCA,SAAUC,EAA4B,EAA5BA,KAAMC,EAAsB,EAAtBA,IAAKC,EAAiB,EAAjBA,KAAMC,EAAW,EAAXA,KACvD7B,EAAW8B,cACjB,EAAkCC,oBAAS,kBAAMR,EAAOS,cAAxD,mBAAOC,EAAP,KAAkBC,EAAlB,KACA,EAAsCH,oBAAS,kBAAMR,EAAOY,gBAA5D,mBAAOC,EAAP,KAAoBC,EAApB,KACA,EAAqCN,oBAAS,kBAAMP,EAAMc,UAA1D,mBAAOC,EAAP,KAAsBC,EAAtB,KACA,EAA0BT,oBAAS,kBAAMP,EAAMiB,SAA/C,mBAAOA,EAAP,KAAcC,EAAd,KACA,EAAkCX,oBAAS,kBAAMH,EAAKU,UAAtD,mBAAOK,EAAP,KAAkBC,EAAlB,KACMC,EAAc,SAACC,EAAUC,GAC7BA,GAASD,IAmDXE,qBAAU,WACRnB,EAAKoB,eAAe,CAAE1B,SAAQC,QAAOC,WAAUC,OAAMC,MAAKC,SAC1DY,EAAYhB,EAAMc,QAClBI,EAASlB,EAAMiB,OACfP,EAAaX,EAAOS,YACpBK,EAAed,EAAOY,cACtBS,EAAahB,EAAKU,UACjB,CAACf,EAAQM,EAAML,EAAOI,IACzB,IAAMsB,EAAiB,CACrBC,SAAU,CACRC,GAAI,CAAEC,KAAM,MAIVC,EAAe,WACnB,OACE,qCACE,sCACA,cAAC,IAAKC,KAAN,CAAWC,MAAM,mBAAjB,SACE,cAAC,IAAD,CACEC,eAAgBlB,EAChBmB,SAAU,kBAAMb,EAAYN,EAAeC,QAG/C,eAAC,IAAKe,KAAN,CACEC,MAAM,QACNG,KAAM,CAAC,QAAS,SAFlB,UAIE,cAAC,IAAD,CAAOC,MAAOnB,EAAOiB,SAAU,SAAAG,GAAC,OA/BZ,SAAAA,GAC1BnB,EAASmB,EAAEC,OAAOF,OA8BwBG,CAAoBF,MACxD,qBACEG,MAAO,CACLC,WAAY,GACZC,QAAS,OACTC,eAAgB,UAJpB,SAOE,cAAC,IAAD,CAAOC,IAAK3B,EAAOuB,MAAO,CAAEK,MAAO,QAASC,OAAQ,YAGxD,cAAC,IAAKf,KAAN,CACEC,MAAM,UACNG,KAAM,CAAC,QAAS,WAChBY,MAAO,CAAC,CAAEC,UAAU,EAAM3D,QAAS,2BAHrC,SAKE,cAAC,IAAD,MAEF,cAAC,IAAK0C,KAAN,CACEC,MAAM,YACNG,KAAM,CAAC,QAAS,aAChBY,MAAO,CAAC,CAAEC,UAAU,EAAM3D,QAAS,2BAHrC,SAKE,cAAC,IAAD,MAEF,cAAC,IAAK0C,KAAN,CACEC,MAAM,QACNG,KAAM,CAAC,QAAS,SAChBY,MAAO,CAAC,CAAEC,UAAU,EAAM3D,QAAS,2BAHrC,SAKE,cAAC,IAAD,MAEF,cAAC,IAAK0C,KAAN,CACEC,MAAM,cACNG,KAAM,CAAC,QAAS,cAChBY,MAAO,CAAC,CAAEC,UAAU,EAAM3D,QAAS,2BAHrC,SAKE,cAAC,IAAD,CAAO4D,YAAa,iBAEtB,cAAC,IAAKlB,KAAN,CACEC,MAAM,iBACNG,KAAM,CAAC,QAAS,iBAChBY,MAAO,CAAC,CAAEC,UAAU,EAAM3D,QAAS,2BAHrC,SAKE,cAAC,IAAM6D,SAAP,MAEF,cAAC,IAAKnB,KAAN,CACEC,MAAM,aACNG,KAAM,CAAC,QAAS,YAChBY,MAAO,CAAC,CAAEC,UAAU,EAAM3D,QAAS,2BAHrC,SAKE,cAAC,IAAD,CAAO4D,YAAa,yBAEtB,cAAC,IAAKlB,KAAN,CACEC,MAAM,aACNG,KAAM,CAAC,QAAS,YAChBY,MAAO,CAAC,CAAEC,UAAU,EAAM3D,QAAS,2BAHrC,SAKE,cAAC,IAAD,CAAOlB,KAAM,aAEf,cAAC,IAAK4D,KAAN,CAAWC,MAAM,WAAjB,SACE,cAAC,IAAKmB,KAAN,CACEhB,KAAM,CAAC,QAAS,MAChBY,MAAO,CACL,CACEK,UAAU,WAAD,4BAAE,WAAOC,EAAGC,GAAV,SAAA7E,EAAA,yDACJ6E,KAASA,EAAMC,OAAS,GADpB,yCAEAC,QAAQC,OAAO,IAAIrE,MAAM,sBAFzB,2CAAF,qDAAC,KAJhB,SAYG,SAACsE,EAAD,SAAWC,EAAX,EAAWA,IAAKC,EAAhB,EAAgBA,OAAYC,EAA5B,EAA4BA,OAA5B,OACC,qCACGH,EAAOI,KAAI,SAACC,EAAOC,GAAR,OACV,wBAAC,IAAKjC,KAAN,2BACML,GADN,IAEEsB,UAAU,EACViB,IAAKF,EAAME,MAEX,cAAC,IAAKlC,KAAN,2BACMgC,GADN,IAEEG,gBAAiB,CAAC,WAAY,UAC9BnB,MAAO,CACL,CACEC,UAAU,EACVmB,YAAY,EACZ9E,QAAS,6CAGb+E,SAAO,EAVT,SAYE,cAAC,IAAD,CAAOnB,YAAY,QAAQT,MAAO,CAAEK,MAAO,YAE5Ca,EAAOH,OAAS,EACf,cAACc,EAAA,EAAD,CACEC,UAAU,wBACVC,QAAS,kBAAMX,EAAOG,EAAM5B,SAE5B,SAGR,eAAC,IAAKJ,KAAN,WACE,cAAC,IAAD,CACE5D,KAAK,SACLoG,QAAS,kBAAMZ,KACfnB,MAAO,CAAEK,MAAO,OAChB2B,KAAM,cAACC,EAAA,EAAD,IAJR,uBAQA,cAAC,IAAKC,UAAN,CAAgBb,OAAQA,mBASlCc,EAAiB,WACrB,OACE,qCACE,wCACA,eAAC,IAAD,CAAKnC,MAAO,CAAEE,QAAS,OAAQC,eAAgB,iBAA/C,UACE,cAAC,IAAKZ,KAAN,CAAWC,MAAM,cAAjB,SAEE,cAAC,IAAD,CACEC,eAAgBxB,EAChByB,SAAU,kBAAMb,EAAYZ,EAAWC,QAK3C,cAAC,IAAKqB,KAAN,CAAWC,MAAM,qBAAjB,SACE,cAAC,IAAD,CACEC,eAAgBrB,EAChBsB,SAAU,kBAAMb,EAAYT,EAAaC,WAI/C,cAAC,IAAKkB,KAAN,CACEC,MAAM,qBACNG,KAAM,CAAC,SAAU,sBACjBY,MAAO,CAAC,CAAEC,UAAU,EAAM3D,QAAS,2BAHrC,SAKE,cAAC,IAAD,CAAOlB,KAAM,aAEf,cAAC,IAAK4D,KAAN,CACEC,MAAM,sBACNG,KAAM,CAAC,SAAU,eACjBY,MAAO,CAAC,CAAEC,UAAU,EAAM3D,QAAS,2BAHrC,SAKE,cAAC,IAAD,CAAOlB,KAAM,aAEf,cAAC,IAAK4D,KAAN,CACEC,MAAM,SACNG,KAAM,CAAC,SAAU,UACjBY,MAAO,CAAC,CAAEC,UAAU,EAAM3D,QAAS,2BAHrC,SAKE,cAAC,IAAD,CAAOlB,KAAM,aAEf,cAAC,IAAK4D,KAAN,CACEC,MAAM,YACNG,KAAM,CAAC,SAAU,YACjBY,MAAO,CAAC,CAAEC,UAAU,EAAM3D,QAAS,kBAHrC,SAKE,cAAC,IAAD,CAAOlB,KAAM,aAEf,cAAC,IAAD,uBACA,cAAC,IAAD,UACE,cAAC,IAAK4D,KAAN,CACES,MAAO,CAAEK,MAAO,QAChBb,MAAM,QACNG,KAAM,CAAC,SAAU,WAAY,SAC7BY,MAAO,CAAC,CAAEC,UAAU,EAAM3D,QAAS,yBAJrC,SAME,cAAC,IAAD,CAAOlB,KAAM,iBAMjByG,EAAmB,WACvB,OACE,qCACE,0CACA,cAAC,IAAD,CAAKpC,MAAO,CAAEE,QAAS,OAAQC,eAAgB,iBAA/C,SACE,cAAC,IAAKZ,KAAN,CACEC,MAAM,eACNG,KAAM,CAAC,WAAY,gBACnBK,MAAO,CAAEK,MAAO,QAChBE,MAAO,CAAC,CAAEC,UAAU,EAAM3D,QAAS,iBAJrC,SAME,cAAC,IAAD,YAMJwF,EAAe,WACnB,OACE,qCACE,sCACA,eAAC,IAAD,CAAKrC,MAAO,CAAEE,QAAS,OAAQC,eAAgB,iBAA/C,UACE,cAAC,IAAKZ,KAAN,CACEC,MAAM,gBACNG,KAAM,CAAC,OAAQ,iBACfK,MAAO,CAAEK,MAAO,QAChBE,MAAO,CAAC,CAAEC,UAAU,EAAM3D,QAAS,wBAJrC,SAME,cAAC,IAAD,MAEF,cAAC,IAAK0C,KAAN,CACEC,MAAM,YACNG,KAAM,CAAC,OAAQ,YACfK,MAAO,CAAEK,MAAO,QAChBE,MAAO,CAAC,CAAEC,UAAU,EAAM3D,QAAS,wBAJrC,SAME,cAAC,IAAD,CAAOlB,KAAM,oBAMjB2G,EAAc,WAClB,OACE,qCACE,gDACA,cAAC,IAAD,CAAKtC,MAAO,CAAEE,QAAS,OAAQC,eAAgB,iBAA/C,SACE,cAAC,IAAKZ,KAAN,CACEC,MAAM,OACNG,KAAM,CAAC,MAAO,QACdK,MAAO,CAAEK,MAAO,QAChBE,MAAO,CAAC,CAAEC,UAAU,EAAM3D,QAAS,SAJrC,SAME,cAAC,IAAD,YAOJ0F,GAAe,WACnB,OACE,qCACE,sCACA,cAAC,IAAKhD,KAAN,CAAWC,MAAM,sBAAjB,SACE,cAAC,IAAD,CACEC,eAAgBd,EAChBe,SAAU,kBAAMb,EAAYF,EAAWC,QAG3C,cAAC,IAAKW,KAAN,CAAWI,KAAM,CAAC,OAAQ,YAA1B,SACE,cAAC,IAAD,CAAO6C,UAAU,MAEnB,cAAC,IAAKjD,KAAN,CACEC,MAAM,WACNG,KAAM,CAAC,OAAQ,YACfY,MAAO,CAAC,CAAE1D,QAAS,yBAA0B2D,UAAU,IAHzD,SAKE,cAAC,IAAD,MAEF,cAAC,IAAKjB,KAAN,CAAWC,MAAM,0BAA0BG,KAAM,CAAC,OAAQ,SAC1DY,MAAO,CAAC,CAAE1D,QAAS,yBAA0B2D,UAAU,IADvD,SAGE,cAAC,IAAD,MAEF,cAAC,IAAKjB,KAAN,CACEC,MAAM,yBACNG,KAAM,CAAC,OAAQ,mBAFjB,SAIE,cAAC,IAAD,MAEF,sBACEK,MAAO,CACLE,QAAS,OACTuC,SAAU,OACVtC,eAAgB,iBAJpB,UAOE,sBAAKH,MAAO,CAAEK,MAAO,MAAOqC,SAAU,KAAtC,UACE,mDACA,cAAC,IAAKnD,KAAN,UACE,cAAC,IAAKoB,KAAN,CACEhB,KAAM,CAAC,OAAQ,wBACfY,MAAO,CACL,CACEK,UAAU,WAAD,4BAAE,WAAOC,EAAGC,GAAV,SAAA7E,EAAA,yDACJ6E,KAASA,EAAMC,OAAS,GADpB,yCAEAC,QAAQC,OAAO,IAAIrE,MAAM,sBAFzB,2CAAF,qDAAC,KAJhB,SAYG,SAACsE,EAAD,SAAWC,EAAX,EAAWA,IAAiBE,GAA5B,EAAgBD,OAAhB,EAA4BC,QAA5B,OACC,qCACGH,EAAOI,KAAI,SAACC,EAAOC,GAAR,OACV,wBAAC,IAAKjC,KAAN,2BACML,GADN,IAEEsB,UAAU,EACViB,IAAKF,EAAME,MAEX,cAAC,IAAKlC,KAAN,2BACMgC,GADN,IAEEG,gBAAiB,CAAC,WAAY,UAC9BnB,MAAO,CACL,CACEC,UAAU,EACVmB,YAAY,EACZ9E,QACE,6CAGN+E,SAAO,EAXT,SAaE,cAAC,IAAD,CACEnB,YAAY,aACZT,MAAO,CAAEK,MAAO,OAChBmC,UAAU,OAGbtB,EAAOH,OAAS,EACf,cAACc,EAAA,EAAD,CACEC,UAAU,0BAGV,SAGR,eAAC,IAAKvC,KAAN,WACE,cAAC,IAAD,CACE5D,KAAK,SACLoG,QAAS,kBAAMZ,KACfnB,MAAO,CAAEK,MAAO,OAChB2B,KAAM,cAACC,EAAA,EAAD,IACNO,UAAU,EALZ,uBASA,cAAC,IAAKN,UAAN,CAAgBb,OAAQA,kBAOpC,sBAAKrB,MAAO,CAAEK,MAAO,MAAOqC,SAAU,KAAtC,UACE,iDACA,cAAC,IAAKnD,KAAN,UACE,cAAC,IAAKoB,KAAN,CACEhB,KAAM,CAAC,OAAQ,YACfY,MAAO,CACL,CACEK,UAAU,WAAD,4BAAE,WAAOC,EAAGC,GAAV,SAAA7E,EAAA,yDACJ6E,KAASA,EAAMC,OAAS,GADpB,yCAEAC,QAAQC,OAAO,IAAIrE,MAAM,sBAFzB,2CAAF,qDAAC,KAJhB,SAYG,SAACsE,EAAD,SAAWC,EAAX,EAAWA,IAAiBE,GAA5B,EAAgBD,OAAhB,EAA4BC,QAA5B,OACC,qCACGH,EAAOI,KAAI,SAACC,EAAOC,GAAR,OACV,wBAAC,IAAKjC,KAAN,2BACML,GADN,IAEEsB,UAAU,EACViB,IAAKF,EAAME,MAEX,cAAC,IAAKlC,KAAN,2BACMgC,GADN,IAEEG,gBAAiB,CAAC,WAAY,UAC9BnB,MAAO,CACL,CACEC,UAAU,EACVmB,YAAY,EACZ9E,QACE,6CAGN+E,SAAO,EAXT,SAaE,cAAC,IAAD,CACEnB,YAAY,aACZT,MAAO,CAAEK,MAAO,OAChBmC,UAAU,OAGbtB,EAAOH,OAAS,EACf,cAACc,EAAA,EAAD,CACEC,UAAU,0BAGV,SAGR,eAAC,IAAKvC,KAAN,WACE,cAAC,IAAD,CACE5D,KAAK,SACLoG,QAAS,kBAAMZ,KACfnB,MAAO,CAAEK,MAAO,OAChB2B,KAAM,cAACC,EAAA,EAAD,IACNO,UAAU,EALZ,uBASA,cAAC,IAAKN,UAAN,CAAgBb,OAAQA,kBAOpC,sBAAKrB,MAAO,CAAEK,MAAO,MAAOqC,SAAU,KAAtC,UACE,+CACA,cAAC,IAAKnD,KAAN,UACE,cAAC,IAAKoB,KAAN,CACEhB,KAAM,CAAC,OAAQ,WACfY,MAAO,CACL,CACEK,UAAU,WAAD,4BAAE,WAAOC,EAAGC,GAAV,SAAA7E,EAAA,yDACJ6E,KAASA,EAAMC,OAAS,GADpB,yCAEAC,QAAQC,OAAO,IAAIrE,MAAM,sBAFzB,2CAAF,qDAAC,KAJhB,SAYG,SAACsE,EAAD,SAAWC,EAAX,EAAWA,IAAiBE,GAA5B,EAAgBD,OAAhB,EAA4BC,QAA5B,OACC,qCACGH,EAAOI,KAAI,SAACC,EAAOC,GAAR,OACV,wBAAC,IAAKjC,KAAN,2BACML,GADN,IAEEsB,UAAU,EACViB,IAAKF,EAAME,MAEX,cAAC,IAAKlC,KAAN,2BACMgC,GADN,IAEEG,gBAAiB,CAAC,WAAY,UAC9BnB,MAAO,CACL,CACEC,UAAU,EACVmB,YAAY,EACZ9E,QACE,6CAGN+E,SAAO,EAXT,SAaE,cAAC,IAAD,CACEnB,YAAY,aACZT,MAAO,CAAEK,MAAO,OAChBmC,UAAU,OAGbtB,EAAOH,OAAS,EACf,cAACc,EAAA,EAAD,CACEC,UAAU,0BAGV,SAGR,eAAC,IAAKvC,KAAN,WACE,cAAC,IAAD,CACE5D,KAAK,SACLoG,QAAS,kBAAMZ,KACfnB,MAAO,CAAEK,MAAO,OAChB2B,KAAM,cAACC,EAAA,EAAD,IACNO,UAAU,EALZ,uBASA,cAAC,IAAKN,UAAN,CAAgBb,OAAQA,yBAW5C,OACE,qBAAKS,UAAU,kBAAf,SACE,cAAC,IAAD,UACE,cAAC,IAAD,CACEjE,KAAMA,EACN8E,SAAU,SAAA/C,GAAK,OAzjBF,SAAAgD,GACnB,IAAMC,EAAI,2BACLD,GADK,IAERlF,KAAK,2BACAkF,EAAOlF,MADR,IAEFoF,SAAUC,SAASH,EAAOrF,OAAOuF,YAEnCtF,MAAM,2BACDoF,EAAOpF,OADP,IAEHiB,MAAOA,EACPH,OAAQC,EACRyE,SAAUD,SAASH,EAAOpF,MAAMwF,UAEhCC,SAAS,YACTC,gBAAgB,IAGlB3F,OAAO,2BACFqF,EAAOrF,QADN,IAEJS,WAAYC,EACZE,aAAcC,EACd+E,mBAAoBJ,SAASH,EAAOrF,OAAO4F,oBAC3CC,YAAaL,SAASH,EAAOrF,OAAO6F,aACpCC,OAAQN,SAASH,EAAOrF,OAAO8F,QAC/BP,SAAUC,SAASH,EAAOrF,OAAOuF,YAEnClF,KAAK,2BACAgF,EAAOhF,MADR,IAEFU,OAAQK,MAGZ2E,IAAYC,YAAW,EAAMvH,GAC7BwH,YAAW,WACTC,EACGtG,aAAa0F,EAAM7G,GACnBG,MAAK,SAAAQ,OAQL+G,SAAQ,kBAAMJ,IAAYC,YAAW,EAAOvH,QAC9C,KA6gBsB2H,CAAa/D,IAChCI,MAAO,CAAEK,MAAO,QAHlB,SAKE,eAAC,IAAD,CACEL,MAAO,CACLE,QAAS,OACTC,eAAgB,gBAChByD,QAAS,YAJb,UAOE,eAAC,IAAD,CAAKvE,KAAM,GAAX,UACE,cAAC,IAAD,CAAKW,MAAO,CAAEE,QAAS,YAAvB,SACE,cAACiC,EAAD,MAEF,cAAC,IAAD,CAAKnC,MAAO,CAAEE,QAAS,YAAvB,SACE,cAACkC,EAAD,MAEF,cAAC,IAAD,CAAKpC,MAAO,CAAEE,QAAS,YAAvB,SACE,cAACmC,EAAD,MAEF,cAAC,IAAD,CAAKrC,MAAO,CAAEE,QAAS,YAAvB,SACE,cAACoC,EAAD,MAEF,cAAC,IAAD,CAAKtC,MAAO,CAAEE,QAAS,YAAvB,SACE,cAACqC,GAAD,SAGJ,cAAC,IAAD,CAAKlD,KAAM,GAAX,SACE,cAAC,IAAD,CAAKW,MAAO,CAAEE,QAAS,YAAvB,SACE,cAACZ,EAAD,kBCthBDuE,UAzEE,WAAO,IAAD,EACf7H,EAAW8B,cACjB,EAAegG,oBAARjG,EAAP,oBACMkG,EAAaC,aAAY,SAAAC,GAAK,OAAIA,EAAMJ,YAAUE,aAArC,GACjBxG,OAAQ,GACRE,SAAU,GACVD,MAAO,IAHU,yBAIP,IAJO,qBAKZ,IALY,GA0BnB,OALAwB,qBAAU,WACRyE,EAAiB1H,YAAYC,GAAUG,MAAK,SAAAQ,GAC1CK,QAAQC,IAAI,aAAc8G,QAE3B,IAED,eAAC,IAAD,WACE,eAAC,IAAD,CAAa/D,MAAO,CAAEE,QAAS,OAAQC,eAAgB,iBAAvD,UACE,sBAAMH,MAAO,CAAEkE,SAAU,GAAIC,MAAO,QAASC,WAAY,KAAzD,6BAGA,sBAAKtC,UAAU,GAAf,UACE,cAAC,IAAD,CACEuC,UAAU,cACVC,MAAO,iCACPC,UA1BiB,WACzBjB,IAAYC,YAAW,EAAKvH,GAC5BwH,YAAW,WACTC,EAAiBtG,aAAa,CAACqH,OAAM,GAAMxI,GAAUG,MAAK,SAAAQ,OAGzD+G,SAAQ,kBAAKJ,IAAYC,YAAW,EAAMvH,QAC3C,MAoBMyI,OAAO,MACPC,WAAW,KACX1E,MAAO,CAAC2E,YAAY,IANtB,SAQE,cAAC,IAAD,CAAQhJ,KAAK,SAASiJ,SAAS,SAA/B,+BAIF,cAAC,IAAD,CACEP,UAAU,aACVC,MAAO,iCACPC,UAzCW,WACnB1G,EAAKgH,UAyCGJ,OAAO,MACPC,WAAW,KALb,SAOE,cAAC,IAAD,CAAQ/I,KAAK,UAAUiJ,SAAS,SAAhC,0BAMN,cAAC,IAAD,UACE,cAAC,EAAD,aACE/G,KAAMA,GAIFkG","file":"static/js/31.2f64c0b8.chunk.js","sourcesContent":["import { SettingsConstants } from \"../config/constant\";\r\n\r\nclass SettingsActions{\r\n    GetConfig(config){\r\n        return {\r\n            type: SettingsConstants.CONFIG,\r\n            payload: config,\r\n          };\r\n    }\r\n}\r\nexport default new SettingsActions();\r\n","import { message } from \"antd\";\r\nimport sendRequest from \"../../axios/requestAPI\";\r\nimport SettingsActions from \"../actions/settingsActions\";\r\nimport Converter from \"../../helpers/converter\";\r\nimport StoreNotif from \"../../views/notifications/notif/notifStore\";\r\nclass SettingsServices {\r\n  QueryConfig = async dispatch => {\r\n    const result = await sendRequest(\"/settings/config\", \"get\")\r\n      .then(response => {\r\n        if (response.status == 200) {\r\n          const action = SettingsActions.GetConfig(\r\n            Converter.convertConfigFile(response.data || [])\r\n          );\r\n          dispatch(action);\r\n          return response.data;\r\n        } else {\r\n          throw new Error(response.message);\r\n        }\r\n      })\r\n      .catch(error => {\r\n        console.log(error);\r\n        // StoreNotif.openSuccessNotif(\"Thông báo\", error.message, 2000, \"error\");\r\n      });\r\n    return result;\r\n  };\r\n  UpdateConfig= async (config,dispatch) =>{\r\n    const result = await sendRequest(\"/settings/config\", \"put\",config)\r\n    .then(response => {\r\n      if (response.status == 200) {\r\n        const action = SettingsActions.GetConfig(\r\n          Converter.convertConfigFile(response.data || [])\r\n        );\r\n        dispatch(action);\r\n        return response.data;\r\n      } else {\r\n        throw new Error(response.message);\r\n      }\r\n    })\r\n    .catch(error => {\r\n      console.log(error);\r\n      StoreNotif.openSuccessNotif(\"Thông báo\", error.message, 2000, \"error\");\r\n    });\r\n  return result;\r\n  }\r\n}\r\nexport default new SettingsServices();\r\n","import { Form, Input, Button, Row, Col, Image, Switch } from \"antd\";\r\nimport { MinusCircleOutlined, PlusOutlined } from \"@ant-design/icons\";\r\nimport { useEffect, useState } from \"react\";\r\nimport \"./styles.scss\";\r\nimport settingsServices from \"../../../../redux/services/settingsServices\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport HelperClass from \"../../../../helpers/helpers\";\r\nimport StoreNotif from \"../../../notifications/notif/notifStore\";\r\nconst TabNotify = ({ notify, bmail, firebase, news, els, logs, form }) => {\r\n  const dispatch = useDispatch();\r\n  const [checkUser, setCheckUser] = useState(() => notify.activeUser);\r\n  const [checkSPUser, setCheckSPUser] = useState(() => notify.activeSPUser);\r\n  const [checkSendMail, setSendMail] = useState(() => bmail.active);\r\n  const [image, setImage] = useState(() => bmail.image);\r\n  const [checkLogs, setCheckLogs] = useState(() => logs.active);\r\n  const toogleCheck = (preState, setSate) => {\r\n    setSate(!preState);\r\n  };\r\n  const handleFinish = values => {\r\n    const body = {\r\n      ...values,\r\n      news: {\r\n        ...values.news,\r\n        timeSync: parseInt(values.notify.timeSync),\r\n      },\r\n      bmail: {\r\n        ...values.bmail,\r\n        image: image,\r\n        active: checkSendMail,\r\n        mailPort: parseInt(values.bmail.mailPort),\r\n        // hash \r\n        subIndex:\"datamail-\",\r\n        deleteAffterDay:1,\r\n         // end hash \r\n      },\r\n      notify: {\r\n        ...values.notify,\r\n        activeUser: checkUser,\r\n        activeSPUser: checkSPUser,\r\n        dayAgoDeleteNotify: parseInt(values.notify.dayAgoDeleteNotify),\r\n        limitRecord: parseInt(values.notify.limitRecord),\r\n        offset: parseInt(values.notify.offset),\r\n        timeSync: parseInt(values.notify.timeSync),\r\n      },\r\n      logs: {\r\n        ...values.logs,\r\n        active: checkLogs,\r\n      },\r\n    };\r\n    HelperClass.SetLoading(true, dispatch);\r\n    setTimeout(() => {\r\n      settingsServices\r\n        .UpdateConfig(body, dispatch)\r\n        .then(data => {\r\n          // openSuccessNotif(\r\n          //   \"Thông báo\",\r\n          //   \"Cập nhật thành công!\",\r\n          //   2000,\r\n          //   \"success\"\r\n          // );\r\n        })\r\n        .finally(() => HelperClass.SetLoading(false, dispatch));\r\n    }, 1000);\r\n  };\r\n  const handleOnChangeImage = e => {\r\n    setImage(e.target.value);\r\n  };\r\n  useEffect(() => {\r\n    form.setFieldsValue({ notify, bmail, firebase, news, els, logs });\r\n    setSendMail(bmail.active);\r\n    setImage(bmail.image);\r\n    setCheckUser(notify.activeUser);\r\n    setCheckSPUser(notify.activeSPUser);\r\n    setCheckLogs(logs.active);\r\n  }, [notify, form, bmail, logs]);\r\n  const formItemLayout = {\r\n    labelCol: {\r\n      xs: { span: 24 },\r\n    },\r\n  };\r\n\r\n  const SettingsMail = () => {\r\n    return (\r\n      <>\r\n        <h5>Mail</h5>\r\n        <Form.Item label=\"Active Send Mail\">\r\n          <Switch\r\n            defaultChecked={checkSendMail}\r\n            onChange={() => toogleCheck(checkSendMail, setSendMail)}\r\n          />\r\n        </Form.Item>\r\n        <Form.Item\r\n          label=\"Image\"\r\n          name={[\"bmail\", \"image\"]}\r\n        >\r\n          <Input value={image} onChange={e => handleOnChangeImage(e)} />\r\n          <div\r\n            style={{\r\n              paddingTop: 10,\r\n              display: \"flex\",\r\n              justifyContent: \"center\",\r\n            }}\r\n          >\r\n            <Image src={image} style={{ width: \"250px\", height: 140 }} />\r\n          </div>\r\n        </Form.Item>\r\n        <Form.Item\r\n          label=\"Address\"\r\n          name={[\"bmail\", \"address\"]}\r\n          rules={[{ required: true, message: \"please fill this field\" }]}\r\n        >\r\n          <Input />\r\n        </Form.Item>\r\n        <Form.Item\r\n          label=\"Telephone\"\r\n          name={[\"bmail\", \"telephone\"]}\r\n          rules={[{ required: true, message: \"please fill this field\" }]}\r\n        >\r\n          <Input />\r\n        </Form.Item>\r\n        <Form.Item\r\n          label=\"Title\"\r\n          name={[\"bmail\", \"title\"]}\r\n          rules={[{ required: true, message: \"please fill this field\" }]}\r\n        >\r\n          <Input />\r\n        </Form.Item>\r\n        <Form.Item\r\n          label=\"Mail Server\"\r\n          name={[\"bmail\", \"adminEmail\"]}\r\n          rules={[{ required: true, message: \"please fill this field\" }]}\r\n        >\r\n          <Input placeholder={\"adminEmail\"} />\r\n        </Form.Item>\r\n        <Form.Item\r\n          label=\"Mail Password \"\r\n          name={[\"bmail\", \"adminPassword\"]}\r\n          rules={[{ required: true, message: \"please fill this field\" }]}\r\n        >\r\n          <Input.Password />\r\n        </Form.Item>\r\n        <Form.Item\r\n          label=\"Mail Host \"\r\n          name={[\"bmail\", \"mailHost\"]}\r\n          rules={[{ required: true, message: \"please fill this field\" }]}\r\n        >\r\n          <Input placeholder={\"mail.yenbai.gov.vn\"} />\r\n        </Form.Item>\r\n        <Form.Item\r\n          label=\"Mail Port \"\r\n          name={[\"bmail\", \"mailPort\"]}\r\n          rules={[{ required: true, message: \"please fill this field\" }]}\r\n        >\r\n          <Input type={\"number\"} />\r\n        </Form.Item>\r\n        <Form.Item label=\"Receiver\">\r\n          <Form.List\r\n            name={[\"bmail\", \"to\"]}\r\n            rules={[\r\n              {\r\n                validator: async (_, names) => {\r\n                  if (!names || names.length < 1) {\r\n                    return Promise.reject(new Error(\"At least 1 email\"));\r\n                  }\r\n                },\r\n              },\r\n            ]}\r\n          >\r\n            {(fields, { add, remove }, { errors }) => (\r\n              <>\r\n                {fields.map((field, index) => (\r\n                  <Form.Item\r\n                    {...formItemLayout}\r\n                    required={false}\r\n                    key={field.key}\r\n                  >\r\n                    <Form.Item\r\n                      {...field}\r\n                      validateTrigger={[\"onChange\", \"onBlur\"]}\r\n                      rules={[\r\n                        {\r\n                          required: true,\r\n                          whitespace: true,\r\n                          message: \"Please input email or delete this field.\",\r\n                        },\r\n                      ]}\r\n                      noStyle\r\n                    >\r\n                      <Input placeholder=\"email\" style={{ width: \"95%\" }} />\r\n                    </Form.Item>\r\n                    {fields.length > 1 ? (\r\n                      <MinusCircleOutlined\r\n                        className=\"dynamic-delete-button\"\r\n                        onClick={() => remove(field.name)}\r\n                      />\r\n                    ) : null}\r\n                  </Form.Item>\r\n                ))}\r\n                <Form.Item>\r\n                  <Button\r\n                    type=\"dashed\"\r\n                    onClick={() => add()}\r\n                    style={{ width: \"95%\" }}\r\n                    icon={<PlusOutlined />}\r\n                  >\r\n                    Add field\r\n                  </Button>\r\n                  <Form.ErrorList errors={errors} />\r\n                </Form.Item>\r\n              </>\r\n            )}\r\n          </Form.List>\r\n        </Form.Item>\r\n      </>\r\n    );\r\n  };\r\n  const SettingsNotify = () => {\r\n    return (\r\n      <>\r\n        <h5>Notify</h5>\r\n        <Row style={{ display: \"flex\", justifyContent: \"space-between\" }}>\r\n          <Form.Item label=\"Active User\">\r\n            {/* <label class=\"switch\"> */}\r\n            <Switch\r\n              defaultChecked={checkUser}\r\n              onChange={() => toogleCheck(checkUser, setCheckUser)}\r\n            />\r\n            {/* <span class=\"slider round\"></span> */}\r\n            {/* </label> */}\r\n          </Form.Item>\r\n          <Form.Item label=\"Active Supper User\">\r\n            <Switch\r\n              defaultChecked={checkSPUser}\r\n              onChange={() => toogleCheck(checkSPUser, setCheckSPUser)}\r\n            />\r\n          </Form.Item>\r\n        </Row>\r\n        <Form.Item\r\n          label=\"Days delete Notify\"\r\n          name={[\"notify\", \"dayAgoDeleteNotify\"]}\r\n          rules={[{ required: true, message: \"please fill this field\" }]}\r\n        >\r\n          <Input type={\"number\"} />\r\n        </Form.Item>\r\n        <Form.Item\r\n          label=\"Limited Record Send\"\r\n          name={[\"notify\", \"limitRecord\"]}\r\n          rules={[{ required: true, message: \"please fill this field\" }]}\r\n        >\r\n          <Input type={\"number\"} />\r\n        </Form.Item>\r\n        <Form.Item\r\n          label=\"Offset\"\r\n          name={[\"notify\", \"offset\"]}\r\n          rules={[{ required: true, message: \"please fill this field\" }]}\r\n        >\r\n          <Input type={\"number\"} />\r\n        </Form.Item>\r\n        <Form.Item\r\n          label=\"Time Sync\"\r\n          name={[\"notify\", \"timeSync\"]}\r\n          rules={[{ required: true, message: \"Default 60000\" }]}\r\n        >\r\n          <Input type={\"number\"} />\r\n        </Form.Item>\r\n        <Row>Template</Row>\r\n        <Row>\r\n          <Form.Item\r\n            style={{ width: \"100%\" }}\r\n            label=\"Title\"\r\n            name={[\"notify\", \"template\", \"title\"]}\r\n            rules={[{ required: true, message: \"please enter message\" }]}\r\n          >\r\n            <Input type={\"text\"} />\r\n          </Form.Item>\r\n        </Row>\r\n      </>\r\n    );\r\n  };\r\n  const SettingsFireBase = () => {\r\n    return (\r\n      <>\r\n        <h5>FireBase</h5>\r\n        <Row style={{ display: \"flex\", justifyContent: \"space-between\" }}>\r\n          <Form.Item\r\n            label=\"Database_URL\"\r\n            name={[\"firebase\", \"database_url\"]}\r\n            style={{ width: \"100%\" }}\r\n            rules={[{ required: true, message: \"Database URL\" }]}\r\n          >\r\n            <Input />\r\n          </Form.Item>\r\n        </Row>\r\n      </>\r\n    );\r\n  };\r\n  const SettingsNews = () => {\r\n    return (\r\n      <>\r\n        <h5>News</h5>\r\n        <Row style={{ display: \"flex\", justifyContent: \"space-between\" }}>\r\n          <Form.Item\r\n            label=\"WhiteHat News\"\r\n            name={[\"news\", \"white_hat_rss\"]}\r\n            style={{ width: \"100%\" }}\r\n            rules={[{ required: true, message: \"Enter whitehat news\" }]}\r\n          >\r\n            <Input />\r\n          </Form.Item>\r\n          <Form.Item\r\n            label=\"Time Sync\"\r\n            name={[\"news\", \"timeSync\"]}\r\n            style={{ width: \"100%\" }}\r\n            rules={[{ required: true, message: \"Enter whitehat news\" }]}\r\n          >\r\n            <Input type={\"number\"} />\r\n          </Form.Item>\r\n        </Row>\r\n      </>\r\n    );\r\n  };\r\n  const SettingsELS = () => {\r\n    return (\r\n      <>\r\n        <h5>ElastichSearch</h5>\r\n        <Row style={{ display: \"flex\", justifyContent: \"space-between\" }}>\r\n          <Form.Item\r\n            label=\"host\"\r\n            name={[\"els\", \"host\"]}\r\n            style={{ width: \"100%\" }}\r\n            rules={[{ required: true, message: \"Host\" }]}\r\n          >\r\n            <Input />\r\n          </Form.Item>\r\n        </Row>\r\n      </>\r\n    );\r\n  };\r\n\r\n  const SettingsLogs = () => {\r\n    return (\r\n      <>\r\n        <h5>Logs</h5>\r\n        <Form.Item label=\"Active Collect Logs\">\r\n          <Switch\r\n            defaultChecked={checkLogs}\r\n            onChange={() => toogleCheck(checkLogs, setCheckLogs)}\r\n          />\r\n        </Form.Item>\r\n        <Form.Item name={[\"logs\", \"subIndex\"]}>\r\n          <Input disabled={true} />\r\n        </Form.Item>\r\n        <Form.Item\r\n          label=\"TimeSync\"\r\n          name={[\"logs\", \"timeSync\"]}\r\n          rules={[{ message: \"please fill this field\", required: true }]}\r\n        >\r\n          <Input />\r\n        </Form.Item>\r\n        <Form.Item label=\"Limit Record every Sync\" name={[\"logs\", \"limit\"]}\r\n        rules={[{ message: \"please fill this field\", required: true }]}\r\n        >\r\n          <Input />\r\n        </Form.Item>\r\n        <Form.Item\r\n          label=\"Day Number Delete Logs\"\r\n          name={[\"logs\", \"deleteAffterDay\"]}\r\n        >\r\n          <Input />\r\n        </Form.Item>\r\n        <div\r\n          style={{\r\n            display: \"flex\",\r\n            flexWrap: \"wrap\",\r\n            justifyContent: \"space-between\",\r\n          }}\r\n        >\r\n          <div style={{ width: \"33%\", minWidth: 300 }}>\r\n            <h5>Table Logs Delete</h5>\r\n            <Form.Item>\r\n              <Form.List\r\n                name={[\"logs\", \"tableDeleteAffterDay\"]}\r\n                rules={[\r\n                  {\r\n                    validator: async (_, names) => {\r\n                      if (!names || names.length < 1) {\r\n                        return Promise.reject(new Error(\"At least 1 email\"));\r\n                      }\r\n                    },\r\n                  },\r\n                ]}\r\n              >\r\n                {(fields, { add, remove }, { errors }) => (\r\n                  <>\r\n                    {fields.map((field, index) => (\r\n                      <Form.Item\r\n                        {...formItemLayout}\r\n                        required={false}\r\n                        key={field.key}\r\n                      >\r\n                        <Form.Item\r\n                          {...field}\r\n                          validateTrigger={[\"onChange\", \"onBlur\"]}\r\n                          rules={[\r\n                            {\r\n                              required: true,\r\n                              whitespace: true,\r\n                              message:\r\n                                \"Please input email or delete this field.\",\r\n                            },\r\n                          ]}\r\n                          noStyle\r\n                        >\r\n                          <Input\r\n                            placeholder=\"Name Table\"\r\n                            style={{ width: \"90%\" }}\r\n                            disabled={true}\r\n                          />\r\n                        </Form.Item>\r\n                        {fields.length > 1 ? (\r\n                          <MinusCircleOutlined\r\n                            className=\"dynamic-delete-button\"\r\n                            // onClick={() => remove(field.name)}\r\n                          />\r\n                        ) : null}\r\n                      </Form.Item>\r\n                    ))}\r\n                    <Form.Item>\r\n                      <Button\r\n                        type=\"dashed\"\r\n                        onClick={() => add()}\r\n                        style={{ width: \"90%\" }}\r\n                        icon={<PlusOutlined />}\r\n                        disabled={true}\r\n                      >\r\n                        Add field\r\n                      </Button>\r\n                      <Form.ErrorList errors={errors} />\r\n                    </Form.Item>\r\n                  </>\r\n                )}\r\n              </Form.List>\r\n            </Form.Item>\r\n          </div>\r\n          <div style={{ width: \"33%\", minWidth: 300 }}>\r\n            <h5>Logs for Notify</h5>\r\n            <Form.Item>\r\n              <Form.List\r\n                name={[\"logs\", \"toNotify\"]}\r\n                rules={[\r\n                  {\r\n                    validator: async (_, names) => {\r\n                      if (!names || names.length < 1) {\r\n                        return Promise.reject(new Error(\"At least 1 email\"));\r\n                      }\r\n                    },\r\n                  },\r\n                ]}\r\n              >\r\n                {(fields, { add, remove }, { errors }) => (\r\n                  <>\r\n                    {fields.map((field, index) => (\r\n                      <Form.Item\r\n                        {...formItemLayout}\r\n                        required={false}\r\n                        key={field.key}\r\n                      >\r\n                        <Form.Item\r\n                          {...field}\r\n                          validateTrigger={[\"onChange\", \"onBlur\"]}\r\n                          rules={[\r\n                            {\r\n                              required: true,\r\n                              whitespace: true,\r\n                              message:\r\n                                \"Please input email or delete this field.\",\r\n                            },\r\n                          ]}\r\n                          noStyle\r\n                        >\r\n                          <Input\r\n                            placeholder=\"Name Table\"\r\n                            style={{ width: \"90%\" }}\r\n                            disabled={true}\r\n                          />\r\n                        </Form.Item>\r\n                        {fields.length > 1 ? (\r\n                          <MinusCircleOutlined\r\n                            className=\"dynamic-delete-button\"\r\n                            // onClick={() => remove(field.name)}\r\n                          />\r\n                        ) : null}\r\n                      </Form.Item>\r\n                    ))}\r\n                    <Form.Item>\r\n                      <Button\r\n                        type=\"dashed\"\r\n                        onClick={() => add()}\r\n                        style={{ width: \"90%\" }}\r\n                        icon={<PlusOutlined />}\r\n                        disabled={true}\r\n                      >\r\n                        Add field\r\n                      </Button>\r\n                      <Form.ErrorList errors={errors} />\r\n                    </Form.Item>\r\n                  </>\r\n                )}\r\n              </Form.List>\r\n            </Form.Item>\r\n          </div>\r\n          <div style={{ width: \"33%\", minWidth: 300 }}>\r\n            <h5>Logs for Mail</h5>\r\n            <Form.Item>\r\n              <Form.List\r\n                name={[\"logs\", \"toEmail\"]}\r\n                rules={[\r\n                  {\r\n                    validator: async (_, names) => {\r\n                      if (!names || names.length < 1) {\r\n                        return Promise.reject(new Error(\"At least 1 email\"));\r\n                      }\r\n                    },\r\n                  },\r\n                ]}\r\n              >\r\n                {(fields, { add, remove }, { errors }) => (\r\n                  <>\r\n                    {fields.map((field, index) => (\r\n                      <Form.Item\r\n                        {...formItemLayout}\r\n                        required={false}\r\n                        key={field.key}\r\n                      >\r\n                        <Form.Item\r\n                          {...field}\r\n                          validateTrigger={[\"onChange\", \"onBlur\"]}\r\n                          rules={[\r\n                            {\r\n                              required: true,\r\n                              whitespace: true,\r\n                              message:\r\n                                \"Please input email or delete this field.\",\r\n                            },\r\n                          ]}\r\n                          noStyle\r\n                        >\r\n                          <Input\r\n                            placeholder=\"Name Table\"\r\n                            style={{ width: \"90%\" }}\r\n                            disabled={true}\r\n                          />\r\n                        </Form.Item>\r\n                        {fields.length > 1 ? (\r\n                          <MinusCircleOutlined\r\n                            className=\"dynamic-delete-button\"\r\n                            // onClick={() => remove(field.name)}\r\n                          />\r\n                        ) : null}\r\n                      </Form.Item>\r\n                    ))}\r\n                    <Form.Item>\r\n                      <Button\r\n                        type=\"dashed\"\r\n                        onClick={() => add()}\r\n                        style={{ width: \"90%\" }}\r\n                        icon={<PlusOutlined />}\r\n                        disabled={true}\r\n                      >\r\n                        Add field\r\n                      </Button>\r\n                      <Form.ErrorList errors={errors} />\r\n                    </Form.Item>\r\n                  </>\r\n                )}\r\n              </Form.List>\r\n            </Form.Item>\r\n          </div>\r\n        </div>\r\n      </>\r\n    );\r\n  };\r\n  return (\r\n    <div className=\"settings-notify\">\r\n      <Row>\r\n        <Form\r\n          form={form}\r\n          onFinish={value => handleFinish(value, \"notify\")}\r\n          style={{ width: \"100%\" }}\r\n        >\r\n          <Row\r\n            style={{\r\n              display: \"flex\",\r\n              justifyContent: \"space-between\",\r\n              padding: \"0px 10px\",\r\n            }}\r\n          >\r\n            <Col span={11}>\r\n              <Row style={{ display: \"contents\" }}>\r\n                <SettingsNotify />\r\n              </Row>\r\n              <Row style={{ display: \"contents\" }}>\r\n                <SettingsFireBase />\r\n              </Row>\r\n              <Row style={{ display: \"contents\" }}>\r\n                <SettingsNews />\r\n              </Row>\r\n              <Row style={{ display: \"contents\" }}>\r\n                <SettingsELS />\r\n              </Row>\r\n              <Row style={{ display: \"contents\" }}>\r\n                <SettingsLogs />\r\n              </Row>\r\n            </Col>\r\n            <Col span={11}>\r\n              <Row style={{ display: \"contents\" }}>\r\n                <SettingsMail />\r\n              </Row>\r\n            </Col>\r\n          </Row>\r\n        </Form>\r\n      </Row>\r\n    </div>\r\n  );\r\n};\r\nexport default TabNotify;\r\n","import { CCard, CCardBody, CCardHeader } from \"@coreui/react\";\r\nimport { Button, Popconfirm } from \"antd\";\r\nimport { useForm } from \"antd/lib/form/Form\";\r\nimport { useEffect } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport settingsServices from \"../../redux/services/settingsServices\";\r\nimport TabNotify from \"./components/TabNotify\";\r\nimport HelperClass from '../../helpers/helpers';\r\nimport StoreNotif from \"../notifications/notif/notifStore\";\r\nconst Settings = () => {\r\n  const dispatch = useDispatch();\r\n  const [form] = useForm();\r\n  const fileConfig = useSelector(state => state.Settings).fileConfig || {\r\n    notify: {},\r\n    firebase: {},\r\n    bmail: {},\r\n    firebase: {},\r\n    logs:{}\r\n  };\r\n  const handleSubmit = () => {\r\n    form.submit();\r\n  };\r\n  const handleResetDefault = () =>{\r\n    HelperClass.SetLoading(true,dispatch);\r\n    setTimeout(()=>{\r\n      settingsServices.UpdateConfig({reset:true},dispatch).then(data => {\r\n        // StoreNotif.openSuccessNotif('Thông báo', 'Reset Default Success!', 2000, 'success');\r\n      })\r\n      .finally(()=> HelperClass.SetLoading(false,dispatch))\r\n    },1000)\r\n  }\r\n  const lorem =\r\n    \"Lorem ipsum dolor sit amet consectetur adipisicing elit. Minus quibusdam qui similique vel, cumque voluptas iure dicta magni deserunt eum nihil laudantium assumenda eius modi amet pariatur temporibus quisquam quos eaque iste, quae non. Sunt magnam consectetur cupiditate officiis sequi aliquam amet excepturi quibusdam vero eius, nulla minus, facilis quaerat. Sit neque eos iusto quidem iste molestias, accusamus non quisquam tenetur ipsum recusandae fugit at modi alias quaerat similique minus exercitationem eaque odit nesciunt inventore, error dicta officia. Repellat ipsum sunt fuga hic corrupti. Eos illum iure sint optio, vitae, libero fugiat numquam voluptatibus unde omnis in perferendis dolor animi!\";\r\n  useEffect(() => {\r\n    settingsServices.QueryConfig(dispatch).then(data => {\r\n      console.log(\"fileConfig\", fileConfig);\r\n    });\r\n  }, []);\r\n  return (\r\n    <CCard>\r\n      <CCardHeader style={{ display: \"flex\", justifyContent: \"space-between\" }}>\r\n        <span style={{ fontSize: 16, color: \"black\", fontWeight: 600 }}>\r\n          Settings System\r\n        </span>\r\n        <div className=\"\">\r\n          <Popconfirm\r\n            placement=\"bottomRight\"\r\n            title={\"Are you really change config !\"}\r\n            onConfirm={handleResetDefault}\r\n            okText=\"Yes\"\r\n            cancelText=\"No\"\r\n            style={{marginRight:20}}\r\n          >\r\n            <Button type=\"dashed\" htmlType=\"submit\">\r\n              Back to Default\r\n            </Button>\r\n          </Popconfirm>\r\n          <Popconfirm\r\n            placement=\"bottomLeft\"\r\n            title={\"Are you really change config !\"}\r\n            onConfirm={handleSubmit}\r\n            okText=\"Yes\"\r\n            cancelText=\"No\"\r\n          >\r\n            <Button type=\"primary\" htmlType=\"submit\">\r\n              Save\r\n            </Button>\r\n          </Popconfirm>\r\n        </div>\r\n      </CCardHeader>\r\n      <CCardBody>\r\n        <TabNotify\r\n          form={form}\r\n          // notify={fileConfig ? fileConfig.notify : {}}\r\n          // mail={fileConfig ? fileConfig.bmail : {}}\r\n          // firebase={fileConfig ? fileConfig.firebase : {}}\r\n          {...fileConfig}\r\n        />\r\n      </CCardBody>\r\n    </CCard>\r\n  );\r\n};\r\nexport default Settings;\r\n"],"sourceRoot":""}